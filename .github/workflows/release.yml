name: Release (Win + Mac)

on:
  push:
    tags: [ 'v*' ]           # e.g. v1.0.1
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: source
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build (PyInstaller)
        run: >
          pyinstaller --noconfirm --windowed
          --add-data "templates;templates"
          --add-data "static;static"
          --add-data "../LICENSE;."
          --name "STAR Dashboard" app.py

      # Create the ZIP **in source/** and DO NOT move it up (no '..' later)
      - name: Package (zip)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $zip = "STAR-Dashboard-Windows-${{ github.ref_name }}.zip"
          Compress-Archive -Path "dist\STAR Dashboard\*" -DestinationPath $zip
          Get-ChildItem -Path $zip -Force

      - name: Upload artifact (Windows zip)
        uses: actions/upload-artifact@v4
        with:
          name: win-zip
          path: source/STAR-Dashboard-Windows-${{ github.ref_name }}.zip
          if-no-files-found: error
          retention-days: 7

  build-macos:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: source
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build (PyInstaller)
        run: >
          pyinstaller --noconfirm --windowed
          --add-data "templates:templates"
          --add-data "static:static"
          --add-data "../LICENSE:."
          --name "STAR Dashboard" app.py

      # Create the ZIP **in source/** (no '..' in upload path)
      - name: Package (.app â†’ zip)
        run: |
          set -e
          cd dist
          zip -r "../STAR-Dashboard-macOS-${{ github.ref_name }}.zip" "STAR Dashboard.app"
          cd ..
          ls -lah "STAR-Dashboard-macOS-${{ github.ref_name }}.zip"

      - name: Upload artifact (macOS zip)
        uses: actions/upload-artifact@v4
        with:
          name: mac-zip
          path: source/STAR-Dashboard-macOS-${{ github.ref_name }}.zip
          if-no-files-found: error
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos]
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./artifacts

      - name: Show downloaded files
        run: ls -lah artifacts

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "STAR Dashboard ${{ github.ref_name }}"
          generate_release_notes: true
          files: artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
